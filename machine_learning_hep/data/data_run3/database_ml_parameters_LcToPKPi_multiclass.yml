#############################################################################
##  Â© Copyright CERN 2023. All rights not expressly granted are reserved.  ##
##                 Author: Gian.Michele.Innocenti@cern.ch                  ##
## This program is free software: you can redistribute it and/or modify it ##
##  under the terms of the GNU General Public License as published by the  ##
## Free Software Foundation, either version 3 of the License, or (at your  ##
## option) any later version. This program is distributed in the hope that ##
##  it will be useful, but WITHOUT ANY WARRANTY; without even the implied  ##
##     warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    ##
##           See the GNU General Public License for more details.          ##
##    You should have received a copy of the GNU General Public License    ##
##   along with this program. if not, see <https://www.gnu.org/licenses/>. ##
#############################################################################

LcpKpi:
  doml: true
  mass: 2.286
  sel_reco_unp: "fPt>0"
  sel_gen_unp: "fPt>0"
  sel_cen_unp: null
  sel_good_evt_unp: null
  sel_reco_skim: [null,null,null,null,null,null]
  sel_gen_skim: [null,null,null,null,null,null]
  sel_skim_binmin: [1,2,4,6,8,12] #list of nbins
  sel_skim_binmax: [2,4,6,8,12,24] #list of nbins
  apply_yptacccut: false
  var_binning: fPt
  dofullevtmerge: false
  var_cand: fCandidateSelFlag
  var_swap: fIsCandidateSwapped
  bitmap_sel:
    var_name: fFlagMcMatchRec
    var_name_gen: fFlagMcMatchGen
    var_name_origgen: fOriginMcGen
    var_name_origrec: fOriginMcRec
    var_isstd: isstd
    var_ismcsignal: ismcsignal
    var_ismcprompt: ismcprompt
    var_ismcfd: ismcfd
    var_ismcbkg: ismcbkg
    var_ismcrefl: ismcref
    isstd : [[1],[]]
    ismcsignal: [[1],[]]
    ismcprompt: [[0],[]]
    ismcfd: [[1],[]]
    ismcbkg: [[],[1]]
    ismcrefl: [[1],[1]]

  dfs:
    read:
      evtorig:
        level: all
        index: fIndexHf3PCollBases
        trees:
          O2hf3pcollbase: [fPosX, fPosY, fPosZ, fNumContrib, fMultZeqNTracksPV, fCentFT0A, fCentFT0C, fCentFT0M, fCentFV0A]
        extra:
          fIsEventReject: 0

      reco:
        level: all
        index: fIndexHf3PBases
        trees:
          O2hf3pbase: [fIndexHf3PCollBases, fPt, fEta, fPhi, fM]
          O2hf3ppar: [fNProngsContributorsPV, fCpa, fCpaXY, fChi2PCA, fDecayLength, fDecayLengthXY,
                      fPtProng0, fPtProng1, fPtProng2, fImpactParameter0, fImpactParameter1, fImpactParameter2,
                      fNSigTpcPi0, fNSigTpcPr0, fNSigTpcKa1, fNSigTpcPi2, fNSigTpcPr2,
                      fNSigTofPi0, fNSigTofPr0, fNSigTofKa1, fNSigTofPi2, fNSigTofPr2,
                      fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2]
          O2hf3pmc:
            level: mc
            vars: [fFlagMcMatchRec, fOriginMcRec, fIsCandidateSwapped]
          O2hf3psel:
            level: mc
            vars: [fCandidateSelFlag]
        filter: "fPt > 1."
        extra:
          fY: log((sqrt(2.28646**2 + (fPt * cosh(fEta))**2) + fPt * sinh(fEta)) / sqrt(2.28646**2 + fPt**2)) #TODO : change mass or make sure Lc mass is updated
        tags:
          isstd: {var: fFlagMcMatchRec, req: [[1],[]], level: mc}
          ismcsignal: {var: fFlagMcMatchRec, req: [[1],[]], abs: true, level: mc}
          ismcbkg: {var: fFlagMcMatchRec, req: [[],[1]], abs: true, level: mc}
          ismcprompt: {var: fOriginMcRec, req: [[0],[]], level: mc}
          ismcfd: {var: fOriginMcRec, req: [[1],[]], level: mc}
        swap: {cand: fCandidateSelFlag, var_swap: fIsCandidateSwapped, vars: [ismcsignal, ismcprompt, ismcfd], level: mc}

      gen:
        level: mc
        trees:
          O2hf3ppbase: [fPt, fEta, fPhi, fFlagMcMatchGen, fOriginMcGen]
        tags:
          isstd: {var: fFlagMcMatchGen, req: [[1],[]], level: mc}
          ismcsignal: {var: fFlagMcMatchGen, req: [[1],[]], abs: true, level: mc}
          ismcbkg: {var: fFlagMcMatchGen, req: [[],[1]], abs: true, level: mc}
          ismcprompt: {var: fOriginMcGen, req: [[0],[]], level: mc}
          ismcfd: {var: fOriginMcGen, req: [[1],[]], level: mc}
        extra:
          fY: log((sqrt(2.28646**2 + (fPt * cosh(fEta))**2) + fPt * sinh(fEta)) / sqrt(2.28646**2 + fPt**2)) #TODO : change mass or make sure Lc mass is updated

    merge:
      - {base: reco, ref: evtorig, extra: {fMultZeqNTracksPV_sub: fMultZeqNTracksPV - fNProngsContributorsPV}}
      #- {base: reco, ref: evtorigmc, use: fIndexCollisions}
      #- {base: gen, ref: evtorigmc, use: fIndexMcCollisions}

    write:
      evtorig:
        level: all
        file: AnalysisResultsEvtOrig.parquet
      evt:
        level: all
        source: evtorig
        file: AnalysisResultsEvt.parquet
      #evtorigmc:
      #  level: mc
      #  file: AnalysisResultsEvtOrig.parquet
      #evtmc:
      #  level: mc
      #  source: evtorigmc
      #  file: AnalysisResultsEvt.parquet
      reco:
        level: all
        file: AnalysisResultsReco.parquet
      gen:
        level: mc
        file: AnalysisResultsGen.parquet

  variables:
    var_all: [fIndexCollisions, fFlagMcMatchRec, fCandidateSelFlag, fOriginMcRec, fIsCandidateSwapped, fNProngsContributorsPV,
              fY, fEta, fPt, fCpa, fCpaXY, fM, fChi2PCA, fDecayLength, fDecayLengthXY,
              fPtProng0, fPtProng1, fPtProng2, fImpactParameter0, fImpactParameter1, fImpactParameter2,
              fNSigTpcPi0, fNSigTpcPr0, fNSigTpcKa1, fNSigTpcPi2, fNSigTpcPr2,
              fNSigTofPi0, fNSigTofPr0, fNSigTofKa1, fNSigTofPi2, fNSigTofPr2,
              fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2]
    var_jet: [fJetPt, fJetEta, fJetPhi]
    var_jetsub: [fZg, fRg, fNsd]
    var_jet_match: [df, fIndexHfCand2Prong]
    var_jetsub_match: [df, fIndexLcChargedJets]
    var_evt:
       data: [fIndexCollisions, fPosX, fPosY, fPosZ, fNumContrib, fMultZeqNTracksPV, fCentFT0A, fCentFT0C, fCentFT0M, fCentFV0A]
       mc:   [fIndexCollisions, fPosX, fPosY, fPosZ, fNumContrib, fMultZeqNTracksPV, fCentFT0A, fCentFT0C, fCentFT0M, fCentFV0A]
    var_gen: [fIndexMcCollisions, fPosX, fPosY, fPosZ, fPt, fY, fFlagMcMatchGen, fOriginMcGen]
    var_training: [[fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2],
                   [fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2],
                   [fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2],
                   [fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2],
                   [fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2],
                   [fImpactParameter0, fImpactParameter1, fImpactParameter2, fCpa, fChi2PCA, fDecayLength, fDecayLengthXY,
                    fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2]]
    var_selected: [fM, fY, fEta, fPt, fCpa, fCpaXY, fChi2PCA, fDecayLength, fDecayLengthXY,
                   fPtProng0, fPtProng1, fPtProng2, fImpactParameter0, fImpactParameter1, fImpactParameter2,
                   fNSigTpcPi0, fNSigTpcPr0, fNSigTpcKa1, fNSigTpcPi2, fNSigTpcPr2,
                   fNSigTofPi0, fNSigTofPr0, fNSigTofKa1, fNSigTofPi2, fNSigTofPr2,
                   fNSigTpcTofPi0, fNSigTpcTofPr0, fNSigTpcTofKa1, fNSigTpcTofPi2, fNSigTpcTofPr2]
    var_boundaries: [fDecayLength, fPt]
    var_correlation:
      - [fDecayLength, fChi2PCA, fCpa]
      - [fPt, fPt, fPt]
    var_class: class
    var_inv_mass: fM
    var_y: fY
    var_cuts:
        - [fPtProng0, lt, null]
        - [fPtProng1, lt, null]
        - [fPtProng2, lt, null]
        - [fCpa, lt, null]
        - [fDecayLength, lt, null]
        - [fChi2PCA, lt, null]

    plot_options:
      prob_cut_scan:
        pt_prong0:
          xlim:
            - 0
            - 8
        pt_prong1:
          xlim:
            - 0
            - 8
        pt_prong2:
          xlim:
            - 0
            - 8
        fDecayLength:
          xlim:
            - 0
            - 0.08
        fChi2PCA:
          xlim:
            - 0
            - 20.
        fNSigTofPr0:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TOF}(p)0"
        fNSigTofPi0:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TOF}(\\pi)0"
        fNSigTofKa1:
          xlim: [-10, 10]
          xlabel: "n\\sigma_\\mathrm{TOF}(K)1"
        fNSigTofPr2:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TOF}(p)2"
        fNSigTofPi2:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TOF}(\\pi)2"
        fNSigTpcPr0:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TPC}(p)0"
        fNSigTpcPi0:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TPC}(\\pi)0"
        fNSigTpcKa1:
          xlim: [-10, 10]
          xlabel: "n\\sigma_\\mathrm{TPC}(K)1"
        fNSigTpcPr2:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TPC}(p)2"
        fNSigTpcPi2:
          xlim: [-50, 50]
          xlabel: "n\\sigma_\\mathrm{TPC}(\\pi)2"
      eff_cut_scan:
        pt_prong0:
          xlim:
            - 0
            - 8
        pt_prong1:
          xlim:
            - 0
            - 8
        pt_prong2:
          xlim:
            - 0
            - 8
        fDecayLength:
          xlim:
            - 0
            - 0.08
        fChi2PCA:
          xlim:
            - 0
            - 20.
  files_names:
    namefile_unmerged_tree: AO2D.root
    namefile_reco: AnalysisResultsReco.parquet
    namefile_evt: AnalysisResultsEvt.parquet
    namefile_evtvalroot: AnalysisResultsROOTEvtVal.root
    namefile_evtorig: AnalysisResultsEvtOrig.parquet
    namefile_gen: AnalysisResultsGen.parquet
    namefile_reco_applieddata: AnalysisResultsRecoAppliedData.parquet
    namefile_reco_appliedmc: AnalysisResultsRecoAppliedMC.parquet
    namefile_mcweights: mcweights.root
    treeoutput: "Lctree"
    histofilename: "masshisto.root"
    efffilename: "effhisto.root"
    respfilename: "resphisto.root"
    crossfilename: "cross_section_tot.root"

  multi:
    data:
      nprocessesparallel: 60
      maxfiles : [-1] #list of periods
      chunksizeunp : [100] #list of periods
      chunksizeskim: [100] #list of periods
      fracmerge : [0.05] #list of periods
      seedmerge: [12] #list of periods
      period: [LHC22o] #list of periods
      select_period: [1]
      prefix_dir: /data2/MLhep/
      unmerged_tree_dir: [real/train_158254/alice/cern.ch/user/a/alihyperloop/jobs/0029] #list of periods
      pkl: [LHC22pp/period_LHC22o/pkldata] #list of periods
      pkl_skimmed: [LHC22pp/period_LHC22o/pklskdata] #list of periods
      pkl_skimmed_merge_for_ml: [LHC22pp/period_LHC22o/pklskmldata] #list of periods
      pkl_skimmed_merge_for_ml_all: LHC22pp/mltotdata
      pkl_evtcounter_all: LHC22pp/evttotdata
      #select_jobs: [[hy_189959], [hy_189000]]
      mcreweights: [../Analyses] #list of periods
    mc:
      nprocessesparallel: 60
      maxfiles : [-1, -1] #list of periods
      chunksizeunp : [100, 100] #list of periods
      chunksizeskim: [100, 100] #list of periods
      fracmerge : [1.0, 1.0] #list of periods
      seedmerge: [12, 12] #list of periods
      period: [LHC22b1b, LHC22b1a] #list of periods
      select_period: [1, 1]
      prefix_dir: /data2/MLhep/
      unmerged_tree_dir: [sim/train_159856/alice/cern.ch/user/a/alihyperloop/jobs/0029,
                          sim/train_159854/alice/cern.ch/user/a/alihyperloop/jobs/0029] #list of periods
      pkl: [LHC22pp_mc/prod_LHC22b1b/pklmc,
            LHC22pp_mc/prod_LHC22b1a/pklmc] #list of periods
      pkl_skimmed: [LHC22pp_mc/prod_LHC22b1b/pklskmc,
                    LHC22pp_mc/prod_LHC22b1a/pklskmc] #list of periods
      pkl_skimmed_merge_for_ml: [LHC22pp_mc/prod_LHC22b1b/pklskmlmc,
                                 LHC22pp_mc/prod_LHC22b1a/pklskmlmc] #list of periods
      pkl_skimmed_merge_for_ml_all: LHC22pp_mc/prod_LHC22/mltotmc
      pkl_evtcounter_all: LHC22pp_mc/prod_LHC22/evttotmc
      mcreweights: [../Analyses, ../Analyses] #list of periods
  ml:
    evtsel: null
    triggersel:
      data: null
      mc: null

    nclasses: [200000, 200000, 200000]
    equalise_sig_bkg: True
    mult_bkg: [1,1,1,1,1,1]
    sampletags: [0, 1, 1]
    sel_bkg: fM < 2.22 or fM > 2.35 # for plotting significance; should agree with bkg selection in sel_ml
    # best to have non-prompt (the smallest class) last, so the plots won't complain about the middle class missing
    sel_ml: [fM < 2.22 or fM > 2.35, ismcsignal == 1 and ismcprompt == 1, ismcsignal == 1 and ismcfd == 1]
    class_labels: [bkg, prompt, non-prompt]
    nkfolds: 5
    rnd_shuffle: 12
    rnd_splt: 12
    rnd_all: 12 # Set to None for pure randomness
    test_frac: 0.2
    binmin: [1,2,4,6,8,12] # must be equal to sel_skim_binmin (sel_skim_binmin bins)
    binmax: [2,4,6,8,12,24] # must be equal to sel_skim_binmax (sel_skim_binmin bins)
    mltype: MultiClassification
    ncorescrossval: 10
    prefix_dir_ml: /data2/vkucera/MLhep/
    mlplot: mlplot # to be removed
    mlout: mlout # to be removed

    opt:
      isFONLLfromROOT: true
      filename_fonll: 'data/fonll/DmesonLcPredictions_13TeV_y05_FFptDepLHCb_BRpythia8_PDG2020.root' # file with FONLL predictions
      fonll_particle: 'hLcpkpipred'
      fonll_pred: 'max' # edge of the FONLL prediction
      FF: 0.204 # fragmentation fraction
      sigma_MB: 57.8e-3  # Minimum Bias cross section (pp) 50.87e-3 [b], 1 for Pb-Pb
      Taa: 1 # 23260 [b^-1] in 0-10% Pb-Pb, 3917 [b^-1] in 30-50% Pb-Pb, 1 for pp
      BR: 6.23e-2 # branching ratio of the decay Lc -> p K- pi+
      f_prompt: 0.9 # estimated fraction of prompt candidates
      bkg_data_fraction: 0.05 # fraction of real data used in the estimation
      num_steps: 111 # number of steps used in efficiency and signif. estimation
      bkg_function: pol2 # fit function for bkg (among TH1 predefined fit functions, e.g. expo, pol1, pol2, ...)
      save_fit: True # save bkg fits with the various cuts on ML output
      raahp: [1,1,1,1,1,1] # sel_skim_binmin bins
      presel_gen_eff: "abs(fY) < 0.8"
      #presel_gen_eff: "abs(fY) < 0.8 and abs(fPosZ) < 10"

  mlapplication:
    data:
      prefix_dir_app: /data2/vkucera/MLhep/
      pkl_skimmed_dec: [LHC22pp/MLapplication/prod_LHC22o/skpkldecdata] #list of periods
      pkl_skimmed_decmerged: [LHC22pp/MLapplication/prod_LHC22o/skpkldecdatamerged] #list of periods
    mc:
      prefix_dir_app: /data2/vkucera/MLhep/
      pkl_skimmed_dec: [LHC22pp_mc/MLapplication/prod_LHC22b1b/skpkldecmc,
                        LHC22pp_mc/MLapplication/prod_LHC22b1a/skpkldecmc,] #list of periods
      pkl_skimmed_decmerged: [LHC22pp_mc/MLapplication/prod_LHC22b1b/skpkldecmcmerged,
                              LHC22pp_mc/MLapplication/prod_LHC22b1a/skpkldecmcmerged] #list of periods
    modelname: xgboost
    modelsperptbin: [xgboost_classifierLcpKpi_dfselection_fPt_1.0_2.0.sav,
                     xgboost_classifierLcpKpi_dfselection_fPt_2.0_4.0.sav,
                     xgboost_classifierLcpKpi_dfselection_fPt_4.0_6.0.sav,
                     xgboost_classifierLcpKpi_dfselection_fPt_6.0_8.0.sav,
                     xgboost_classifierLcpKpi_dfselection_fPt_8.0_12.0.sav,
                     xgboost_classifierLcpKpi_dfselection_fPt_12.0_24.0.sav]
    probcutpresel:
      data: [[0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.7, 0.0, 0.0], [0.7, 0.0, 0.0]] #list of nbins
      mc: [[0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.5, 0.0, 0.0], [0.7, 0.0, 0.0], [0.7, 0.0, 0.0]] #list of nbins
    probcutoptimal: [[0.2, 0.15, 0.0], [0.2, 0.15, 0.0], [0.2, 0.15, 0.0], [0.2, 0.15, 0.0], [0.5, 0.2, 0.0], [0.5, 0.2, 0.0]] #list of nbins
  analysis:
    anahptspectrum: "LctopKpi" # D0Kpi, DplusKpipi, DstarD0pi, DsKKpi, LctopKpi, LcK0Sp
    fd_method: "Nb" # fc, Nb
    cctype: "pp"
    sigmamb: 59.4e+9 # 50.87e+9 pp5TeV, 57.8e+9 pp13TeV, 59.4e+9 pp Run3, pb
    inputfonllpred: data/fonll/DmesonLcPredictions_13TeV_y05_FFptDepLHCb_BRpythia8_PDG2020.root
    dir_general_plots: analysis_plots

    Run3analysis:
      proc_type: Dhadrons
      useperiod: [1,1]
      plotbin: [1]
      usesinglebineff: 0
      sel_binmin2: [1,2,4,6,8,12] #list of nbins
      sel_binmax2: [2,4,6,8,12,24] #list of nbins
      var_binning2: null
      triggerbit: ''
      use_cuts: False
      cuts:
        - "fDecayLength > 0.02"
        - "fDecayLength > 0.02"
        - "fDecayLength > 0.02"
        - "fDecayLength > 0.02"
        - "fDecayLength > 0.02"
        - "fDecayLength > 0.02"


      sel_an_binmin: [1,2,4,6,8,12]
      sel_an_binmax: [2,4,6,8,12,24]
      binning_matching: [0,1,2,3,4,5]
      presel_gen_eff: "abs(fY) < 0.5"
      evtsel: "abs(fPosZ < 10)"
      triggersel:
        data: null
        mc: null
        weighttrig: false

      data:
        runselection: [null] #FIXME
        prefix_dir_res: /data2/vkucera/MLhep/
        results: [LHC22pp/Results/prod_LHC22o/resultsdata] #list of periods
        resultsallp: LHC22pp/Results/resultsdatatot
      mc:
        runselection: [null, null] #FIXME
        prefix_dir_res: /data2/vkucera/MLhep/
        results: [LHC22pp_mc/Results/prod_LHC22b1b/resultsmc,
                  LHC22pp_mc/Results/prod_LHC22b1a/resultsmc] #list of periods
        resultsallp: LHC22pp_mc/Results/prod_LHC22/resultsmctot

      mass_fit_lim: [2.10, 2.47] # region for the fit of the invariant mass distribution [GeV/c^2]
      bin_width: 0.001 # bin width of the invariant mass histogram
      # To initialize the individual fits in pT bins
      # Decide whether to take the sigma from MC or data for individual fits
      init_fits_from: [mc,mc,mc,mc,mc,mc] # data or mc
      sgnfunc: [kGaus,kGaus,kGaus,kGaus,kGaus,kGaus]
      bkgfunc: [Pol2,Pol2,Pol2,Pol2,Pol2,Pol2]
      masspeak: 2.286
      massmin: [2.18, 2.18, 2.16, 2.14, 2.13, 2.10]
      massmax: [2.40, 2.40, 2.42, 2.436, 2.446, 2.47]
      rebin: [5,5,6,7,8,14]
      fix_mean: [false,false,false,false,false,false]
      fix_sigma: [false,false,false,false,false,false]
      # Fix mean and/or sigma
      FixedMean: False
      SetFixGaussianSigma: [false,false,false,false,false,false]
      # Use value set for "masspeak" for initializing total fit, otherwise what is derived from MC fit is used
      SetInitialGaussianMean: true
      # Use values set for "sigmaarray" for initializing total fit (per pT bin),
      # otherwise what is derived from MC fit is used
      SetInitialGaussianSigma: [false,false,false,false,false,false]
      # Max percentage deviation in sigma (from init) to be considered as a good fit
      MaxPercSigmaDeviation: 0.5
      # Number of initial signal sigmas around the mean to be excluded for side-band fit
      exclude_nsigma_sideband: 4
      # Sigma around mean where signal is integrated after total fit has been ne
      nsigma_signal: 3
      dolikelihood: true
      sigmaarray: [0.01,0.01,0.01,0.01,0.01,0.01]
      FixedSigma: false
      fitcase: Lc
      latexnamehadron: "#Lambda_{c}^{pK#pi}"
      latexbin2var: "n_{trkl}"
      nevents: null
      dodoublecross: false
      dobkgfromsideband: false

  systematics:
    probvariation:
      useperiod: [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1] #period from where to define prob cuts
      ncutvar: 10 #number of looser and tighter variations
      maxperccutvar: 0.25 #max diff in efficiency for loosest/tightest var
      cutvarminrange: [[0.1, 0.3], [0.1, 0.3], [0.1, 0.3], [0.1, 0.3], [0.1, 0.3], [0.7, 0.9]] #Min starting point for scan
      cutvarmaxrange: [[0.7, 0.9], [0.7, 0.9], [0.7, 0.9], [0.7, 0.9], [0.7, 0.9], [0.7, 0.9]] #Max starting point for scan
      fixedmean: True #Fix mean cutvar histo to central fit
      fixedsigma: True #Fix sigma cutvar histo to central fit
