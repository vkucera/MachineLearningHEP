categories:
    default:
        activate: yes
        processor: false
        label: "default"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            default:
                activate: [yes]
                label: ["default"]
                diffs: {}
    fitting:
        activate: no
        processor: false
        label: "fitting"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            bkgfunc: # TODO: mass_roofit
                activate: [yes]
                label: ["bkg. func."]
                diffs:
                    analysis:
                        jet_obs:
                            mass_roofit:
                                - - level: mcsig
                                    datasel: mcsig
                                    range: [1.69, 2.04]
                                    components:
                                      sig:
                                        fn: 'Gaussian::peak(m[1.,5.], mean[1.85,1.89], sigma_g1[.01,.08])'
                                      bkg:
                                        fn: 'Gaussian::wide(m, mean, sigma_wide[.05,1.])'
                                      model:
                                        fn: 'SUM::sig(frac_wide[0.,.3]*wide, peak)'
                                  - level: mcrefl
                                    ptrange: [1., 3.]
                                    datasel: mcrefl
                                    range: [1.69, 2.04]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.1])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.1])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.1,.9]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [3., 4.]
                                    datasel: mcrefl
                                    range: [1.68, 2.06]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [4., 5.]
                                    datasel: mcrefl
                                    range: [1.64, 2.08]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [5., 6.]
                                    datasel: mcrefl
                                    range: [1.64, 2.10]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.8,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [6., 8.]
                                    datasel: mcrefl
                                    range: [1.60, 2.14]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [8., 12.]
                                    datasel: mcrefl
                                    range: [1.52, 2.30]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [12., 36.]
                                    datasel: mcrefl
                                    range: [1.40, 2.4]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mc
                                    ptrange: [1., 3.]
                                    range: [1.69, 2.04]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [3., 4.]
                                    range: [1.68, 2.06]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [4., 5.]
                                    range: [1.64, 2.08]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [5., 6.]
                                    range: [1.64, 2.10]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [6., 8.]
                                    range: [1.60, 2.14]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [8., 12.]
                                    range: [1.52, 2.30]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [12., 36.]
                                    range: [1.40, 2.40]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - ptrange: [1., 2.]
                                    per_ptjet: true
                                    range: [1.72, 2.02]
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [2., 3.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.72, 2.04]
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [3., 4.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.72, 2.06]
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [4., 5.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    # fix_params: ['mean', 'sigma_g1', 'frac_refl']
                                    range: [1.72, 2.08]
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [5., 6.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.72, 2.10]
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [6., 8.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.72, 2.14]
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - range: [1.72, 2.20]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    components:
                                      bkg:
                                        fn: 'Polynomial::bkg(m, {a0[0.2, -3, 3], a1[0.2 , -3, 3], a2[0.2, -3, 3]})'  # variation
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'

            sigfunc: # TODO: mass_roofit
                activate: [no]
                label: ["sig. func."]
                diffs:
                    analysis:
                        jet_obs:
                            todo: [0]
            massmin: # TODO: mass_roofit
                activate: [yes]
                label:
                    - "#it{m} min. 1.75"
                diffs:
                    analysis:
                        jet_obs:
                            mass_roofit:
                                - - level: mcsig
                                    datasel: mcsig
                                    range: [1.69, 2.04]
                                    components:
                                      sig:
                                        fn: 'Gaussian::peak(m[1.,5.], mean[1.85,1.89], sigma_g1[.01,.08])'
                                      bkg:
                                        fn: 'Gaussian::wide(m, mean, sigma_wide[.05,1.])'
                                      model:
                                        fn: 'SUM::sig(frac_wide[0.,.3]*wide, peak)'
                                  - level: mcrefl
                                    ptrange: [1., 3.]
                                    datasel: mcrefl
                                    range: [1.69, 2.04]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.1])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.1])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.1,.9]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [3., 4.]
                                    datasel: mcrefl
                                    range: [1.68, 2.06]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [4., 5.]
                                    datasel: mcrefl
                                    range: [1.64, 2.08]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [5., 6.]
                                    datasel: mcrefl
                                    range: [1.64, 2.10]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.8,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.0], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [6., 8.]
                                    datasel: mcrefl
                                    range: [1.60, 2.14]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [8., 12.]
                                    datasel: mcrefl
                                    range: [1.52, 2.30]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mcrefl
                                    ptrange: [12., 36.]
                                    datasel: mcrefl
                                    range: [1.40, 2.4]
                                    components:
                                      refl_l:
                                        fn: 'Gaussian::refl_l(m, mean_l[1.7,1.865], sigma_l[.01,.2])'
                                      refl_r:
                                        fn: 'Gaussian::refl_r(m, mean_r[1.865,2.1], sigma_r[.01,.2])'
                                      model:
                                        fn: 'SUM::refl(frac_l[0.,1.]*refl_l, refl_r)'
                                  - level: mc
                                    ptrange: [1., 3.]
                                    range: [1.69, 2.04]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [3., 4.]
                                    range: [1.68, 2.06]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [4., 5.]
                                    range: [1.64, 2.08]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [5., 6.]
                                    range: [1.64, 2.10]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [6., 8.]
                                    range: [1.60, 2.14]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [8., 12.]
                                    range: [1.52, 2.30]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - level: mc
                                    ptrange: [12., 36.]
                                    range: [1.40, 2.40]
                                    fix_params: ['frac_l', 'mean_l', 'mean_r', 'sigma_l', 'sigma_r', 'frac_wide', 'sigma_g1', 'sigma_wide']
                                    components:
                                      model:
                                        fn: 'SUM::sigrefl(frac_refl[0.,1.]*refl, sig)'
                                  - ptrange: [1., 2.]
                                    per_ptjet: true
                                    range: [1.75, 2.02]  # variation
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [2., 3.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.75, 2.04]  # variation
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [3., 4.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.75, 2.06]  # variation
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [4., 5.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.75, 2.08]  # variation
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [5., 6.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.75, 2.10]  # variation
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - ptrange: [6., 8.]
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    range: [1.75, 2.14]  # variation
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
                                  - range: [1.75, 2.20]  # variation
                                    per_ptjet: true
                                    fix_params: ['frac_refl']
                                    free_params: ['sigma_g1']
                                    fix_params_ptjet: ['mean', 'sigma_g1']
                                    components:
                                      bkg:
                                        fn: 'Exponential::bkg(m, alpha[-100,0])'
                                      model:
                                        fn: 'SUM::sum(frac[0.,1.]*sigrefl, bkg)'
            reflections:
                activate: [yes]
                label: ["w/o refl."]
                diffs:
                    analysis:
                        jet_obs:
                                corr_refl: [false]
    sideband:
        activate: no
        processor: false
        label: "sideband sub."
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            sigma:  # TODO
                activate: [yes, yes, yes, yes]
                label:
                    - "S 1.6 #sigma"
                    - "S 1.7 #sigma"
                    - "S 1.8 #sigma"
                    - "S 1.9 #sigma"
                diffs:
                    analysis:
                        jet_obs:
                            sidesub:
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-1.6., 1.6]  # variation
                                        right: [3., 5.]
                                  - regions:
                                        left: [-5.5, -3.]
                                        signal: [-1.6, 1.6]  # variation
                                        right: [3., 5.5]
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-1.7, 1.7]  # variation
                                        right: [3., 5.]
                                  - regions:
                                        left: [-5.5, -3.]
                                        signal: [-1.7, 1.7]  # variation
                                        right: [3., 5.5]
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-1.8, 1.8]  # variation
                                        right: [3., 5.]
                                  - regions:
                                        left: [-5.5, -3.]
                                        signal: [-1.8, 1.8]  # variation
                                        right: [3., 5.5]
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-1.9, 1.9]  # variation
                                        right: [3., 5.]
                                  - regions:
                                        left: [-5.5, -3.]
                                        signal: [-1.9, 1.9]  # variation
                                        right: [3., 5.5]
            ranges: # TODO
                activate: [yes, yes]
                label:
                    - "SB [#minus6, #minus3]#cup[3, 6]"
                    - "SB [#minus5, #minus3]#cup[3, 5]"
                diffs:
                    analysis:
                        jet_obs:
                            sidesub:
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 6.]  # variation
                                  - regions:
                                        left: [-6., -3.]  # variation
                                        signal: [-2., 2.]
                                        right: [3., 6.]  # variation
                                - - level: mc
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 3.]
                                  - ptrange: [16., 100.]
                                    regions:
                                        left: [-2., -2.]
                                        signal: [-2., 2.]
                                        right: [3., 5.]  # variation
                                  - regions:
                                        left: [-5., -3.]  # variation
                                        signal: [-2., 2.]
                                        right: [3., 5.]  # variation
            sb_left:  # not for D0
                activate: [no]
                label: ["left sb only"]
                diffs:
                    analysis:
                        jet_obs:
                            sidebandleftonly: [true]
    feeddown:
        activate: no
        processor: false
        label: "feed-down"
        correlation: "corr"
        rms: false
        symmetrise: false
        rms_both_sides: false
        variations:
            tune:
                activate: [yes, yes, yes, yes, yes, yes, yes, yes, yes]
                label:
                    - "#it{f}_{F} = 1, #it{f}_{R} = 0.5"
                    - "#it{f}_{F} = 0.5, #it{f}_{R} = 1"
                    - "#it{f}_{F} = 2, #it{f}_{R} = 1"
                    - "#it{f}_{F} = 1, #it{f}_{R} = 2"
                    - "#it{f}_{F} = 2, #it{f}_{R} = 2"
                    - "#it{f}_{F} = 0.5, #it{f}_{R} = 0.5"
                    - "#it{m}_{b} high"
                    - "#it{m}_{b} low"
                    - "no EvtGen"
                diffs:
                    analysis:
                        jet_obs:
                            fd_root:
                                - /data2/vkucera/powheg/trees_powheg_fd_F1_R05.root
                                - /data2/vkucera/powheg/trees_powheg_fd_F05_R1.root
                                - /data2/vkucera/powheg/trees_powheg_fd_F2_R1.root
                                - /data2/vkucera/powheg/trees_powheg_fd_F1_R2.root
                                - /data2/vkucera/powheg/trees_powheg_fd_F2_R2.root
                                - /data2/vkucera/powheg/trees_powheg_fd_F05_R05.root
                                - /data2/vkucera/powheg/trees_powheg_fd_Mhigh.root
                                - /data2/vkucera/powheg/trees_powheg_fd_Mlow.root
                                - /data2/vkucera/powheg/trees_powheg_fd_NoEvtGen.root
                            fd_parquet:
                                - /data2/jklein/powheg/trees_powheg_fd_F1_R05.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_F05_R1.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_F2_R1.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_F1_R2.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_F2_R2.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_F05_R05.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_Mhigh.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_Mlow.parquet
                                - /data2/jklein/powheg/trees_powheg_fd_NoEvtGen.parquet
    prior:
        activate: no
        processor: true
        label: "prior"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            flat: # TODO
                activate: [no]
                label: ["flat"]
                diffs:
                    analysis:
                        jet_obs:
                            doprior: [true]
                            unfolding_iterations_sel: [4]
    regularisation:
        activate: no
        processor: false
        label: "regularisation"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            iter: # TODO
                activate: [yes, yes]
                label: ["down (3)", "up (7)"]
                diffs:
                    analysis:
                        jet_obs:
                            unfolding_iterations_sel: [3, 7]
    normalisation:
        activate: no
        processor: false
        label: "#it{#sigma}_{MB}"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            crosssection:
                activate: [yes, yes]
                label: ["#it{#sigma}_{MB} down", "#it{#sigma}_{MB} up"]
                diffs:
                    analysis:
                        jet_obs:
                            xsection_inel: [54.91, 60.69]  # TODO: update values for Run 3
    tracking: # TODO
        activate: no
        processor: true
        label: "tracking eff."
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            efficiency:
                activate: [no]
                label: ["eff. down"]
                diffs:
                  multi:
                    mc:
                      unmerged_tree_dir: [[/data/TTree/vAN-20220820_ROOT6-1/pp_sim/713_20220822-1048/merged,
                                          /data/TTree/vAN-20220820_ROOT6-1/pp_sim/713_20220822-1048/merged,
                                          /data/TTree/vAN-20220820_ROOT6-1/pp_sim/713_20220822-1048/merged]] #list of periods
                      pkl: [[/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2016_mc_prodD2H/713_20220822-1048/pkl,
                            /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2017_mc_prodD2H/713_20220822-1048/pkl,
                            /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2018_mc_prodD2H/713_20220822-1048/pkl]] #list of periods
                      pkl_skimmed: [[/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2016_mc_prodD2H/713_20220822-1048/pklsk,
                                    /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2017_mc_prodD2H/713_20220822-1048/pklsk,
                                    /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2018_mc_prodD2H/713_20220822-1048/pklsk]] #list of periods
                      pkl_skimmed_merge_for_ml: [[/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2016_mc_prodD2H/713_20220822-1048/pklskml,
                                                 /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2017_mc_prodD2H/713_20220822-1048/pklskml,
                                                 /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2018_mc_prodD2H/713_20220822-1048/pklskml]] #list of periods
                      pkl_skimmed_merge_for_ml_all: [/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_mc_prodD2H_mltot_trkeff]
                      pkl_evtcounter_all: [/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_mc_prodD2H_evttot_trkeff]

                  ml:
                    mlplot: [/data/Derived/LckINT7HighMultCalo_withJets/vAN-20210223_ROOT6-1/mlplot] # to be removed
                    mlout: [/data/Derived/LckINT7HighMultCalo_withJets/vAN-20210223_ROOT6-1/mlout] # to be removed
                  mlapplication:
                    mc:
                      pkl_skimmed_dec: [[/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2016_mc_prodD2H/713_20220822-1048/pklskdec,
                                        /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2017_mc_prodD2H/713_20220822-1048/pklskdec,
                                        /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2018_mc_prodD2H/713_20220822-1048/pklskdec]] #list of periods
                      pkl_skimmed_decmerged: [[/data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2016_mc_prodD2H/713_20220822-1048/pklskdecmerged,
                                              /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2017_mc_prodD2H/713_20220822-1048/pklskdecmerged,
                                              /data/Derived/LckINT7HighMultCalo_withJets_JetsPaper/vAN-20220820_ROOT6-1/pp_2018_mc_prodD2H/713_20220822-1048/pklskdecmerged]] #list of periods
    binning:
        activate: no
        processor: true
        label: "binning"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            rebin:
                activate: [yes]
                label: ["rebin"]
                diffs:
                    analysis:
                        jet_obs:
                            bin_width: [0.01]
            pt_jet:  # TODO
                activate: [no]
                label:
                    - "#it{p}_{T}^{jet} 5#rightarrow4"
                diffs:
                    analysis:
                        jet_obs:
                            bins_ptjet: [[4, 7, 15, 30, 50]]
    cutvar:
        activate: yes  # TODO
        processor: true
        label: "BDT cut"
        correlation: "corr"
        rms: true
        symmetrise: true
        rms_both_sides: true
        variations:
            cutvar:
                activate: [yes, yes, yes, no, no]
                label:
                    - "default"  # working point (for tests, should be same as default result)
                    - "null"  # no cuts (for tests, whatever was applied on Hyperloop)
                    - "loose"  # same cuts as Hyperloop (for tests, should be same as null)
                    - "cut 0.5"
                    - "cut 0.25"
                diffs:
                    analysis:
                        jet_obs:
                            use_cuts: [True, True, True, True, True]
                            cuts:
                                    - ["mlBkgScore < 0.02", "mlBkgScore < 0.04", "mlBkgScore < 0.06", "mlBkgScore < .08", "mlBkgScore < 0.14", "mlBkgScore < 0.26", "mlBkgScore < 0.46", "mlBkgScore < 0.52"]
                                    - [null,null,null,null,null,null,null,null]
                                    - ["mlBkgScore < 0.12", "mlBkgScore < 0.16", "mlBkgScore < 0.2", "mlBkgScore < .25", "mlBkgScore < 0.4", "mlBkgScore < 0.6", "mlBkgScore < 0.8", "mlBkgScore < 0.8"]
                                    - ["mlBkgScore < 0.01", "mlBkgScore < 0.02", "mlBkgScore < 0.03", "mlBkgScore < .04", "mlBkgScore < 0.07", "mlBkgScore < 0.13", "mlBkgScore < 0.23", "mlBkgScore < 0.26"]
                                    - ["mlBkgScore < 0.005", "mlBkgScore < 0.01", "mlBkgScore < 0.015", "mlBkgScore < .02", "mlBkgScore < 0.035", "mlBkgScore < 0.065", "mlBkgScore < 0.125", "mlBkgScore < 0.13"]
